{
  
    
        "post0": {
            "title": "(1주차) 9월5일에 대한 보강",
            "content": "import . import matplotlib.pyplot as plt import numpy as np . boxplot . motivating example . (예제1) 전북고등학교: 평균은 좋은 측정값인가? . - 전북고등학교에서 통계학을 수업하는 A선생님과 B선생님의 있다. A선생님에게서 수업을 들을 학생들의 평균은 79.1이고 B선생님에게서 수업을 들은 학생들의 평균은 78.3이다. . y1=[75,75,76,76,77,77,79,79,79,98] # A선생님에게 통계학을 배운 학생의 점수들 y2=[76,76,77,77,78,78,80,80,80,81] # B선생님에게 통계학을 배운 학생의 점수들 . np.mean(y1),np.mean(y2) . (79.1, 78.3) . - 의사결정: A선생님에게 배운 학생들의 실력이 평균적으로 더 좋을 것이다. . - 평균은 A반(=A선생님에게 통계학을 배운 반)이 더 높다. 그런데 98점을 받은 학생이 A반에 포함되어서 A반이 전체평균이 높게 나온것이고 나머지 학생들은 전체적으로 B반 학생들이 더 시험을 잘 보았다고 해석할 수 있다. . - 교훈: 단순한 평균비교보다 학생들이 받은 점수의 분포를 비교해보는 것이 중요하다. 분포를 살펴보는 방법 중 유용한 방법이 박스플랏이다. . matplotlib&#51004;&#47196; boxplot &#44536;&#47532;&#44592; . - A반 학생들의 박스플랏 그리기 . plt.boxplot(y1) . {&#39;whiskers&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f75755390&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f757555d0&gt;], &#39;caps&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f75755950&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f75755c50&gt;], &#39;boxes&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f75755110&gt;], &#39;medians&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f75766050&gt;], &#39;fliers&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f75766350&gt;], &#39;means&#39;: []} . - B반 학생들의 박스플랏 그리기 . plt.boxplot(y2) . {&#39;whiskers&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f748e7690&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f748e79d0&gt;], &#39;caps&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f748e7d10&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f748f8090&gt;], &#39;boxes&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f748e7390&gt;], &#39;medians&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f748f8410&gt;], &#39;fliers&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f748f8750&gt;], &#39;means&#39;: []} . - A반 학생들의 점수와 B반 학생들의 점수를 나란히 박스플랏으로 그리자. . plt.boxplot([y1,y2]) . {&#39;whiskers&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f74700510&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f74700750&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f7471eb50&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f7471ee50&gt;], &#39;caps&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f74700a90&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f74700dd0&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f747371d0&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f74737510&gt;], &#39;boxes&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f74700250&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f7471e810&gt;], &#39;medians&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f7471e190&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f74737850&gt;], &#39;fliers&#39;: [&lt;matplotlib.lines.Line2D at 0x7f5f7471e4d0&gt;, &lt;matplotlib.lines.Line2D at 0x7f5f74737b90&gt;], &#39;means&#39;: []} . boxplot&#51060;&#46976;? . - ref: https://github.com/mGalarnyk/Python_Tutorials/blob/master/Statistics/boxplot/box_plot.ipynb . np.random.seed(916170) # connection path is here: https://stackoverflow.com/questions/6146290/plotting-a-line-over-several-graphs mu, sigma = 0, 1 # mean and standard deviation s = np.random.normal(mu, sigma, 1000) fig, axes = plt.subplots(nrows = 1, ncols = 1, figsize=(10, 5)) # rectangular box plot bplot = axes.boxplot(s, vert=False, patch_artist=True, showfliers=True, # This would show outliers (the remaining .7% of the data) positions = [0], boxprops = dict(linestyle=&#39;--&#39;, linewidth=2, color=&#39;Black&#39;, facecolor = &#39;red&#39;, alpha = .4), medianprops = dict(linestyle=&#39;-&#39;, linewidth=2, color=&#39;Yellow&#39;), whiskerprops = dict(linestyle=&#39;-&#39;, linewidth=2, color=&#39;Blue&#39;, alpha = .4), capprops = dict(linestyle=&#39;-&#39;, linewidth=2, color=&#39;Black&#39;), flierprops = dict(marker=&#39;o&#39;, markerfacecolor=&#39;green&#39;, markersize=10, linestyle=&#39;none&#39;, alpha = .4), widths = .3, zorder = 1) axes.set_xlim(-4, 4) plt.xticks(fontsize = 14) axes.set_yticks([]) axes.annotate(r&#39;&#39;, xy=(-.73, .205), xycoords=&#39;data&#39;, xytext=(.66, .205), textcoords=&#39;data&#39;, arrowprops=dict(arrowstyle=&quot;|-|&quot;, connectionstyle=&quot;arc3&quot;) ); axes.text(0, .25, &quot;Interquartile Range n(IQR)&quot;, horizontalalignment=&#39;center&#39;, fontsize=18) axes.text(0, -.21, r&quot;Median&quot;, horizontalalignment=&#39;center&#39;, fontsize=16); axes.text(2.65, -.15, &quot; &quot;Maximum &quot;&quot;, horizontalalignment=&#39;center&#39;, fontsize=18); axes.text(-2.65, -.15, &quot; &quot;Minimum &quot;&quot;, horizontalalignment=&#39;center&#39;, fontsize=18); axes.text(-.68, -.24, r&quot;Q1&quot;, horizontalalignment=&#39;center&#39;, fontsize=18); axes.text(-2.65, -.21, r&quot;(Q1 - 1.5*IQR)&quot;, horizontalalignment=&#39;center&#39;, fontsize=16); axes.text(.6745, -.24, r&quot;Q3&quot;, horizontalalignment=&#39;center&#39;, fontsize=18); axes.text(.6745, -.30, r&quot;(75th Percentile)&quot;, horizontalalignment=&#39;center&#39;, fontsize=12); axes.text(-.68, -.30, r&quot;(25th Percentile)&quot;, horizontalalignment=&#39;center&#39;, fontsize=12); axes.text(2.65, -.21, r&quot;(Q3 + 1.5*IQR)&quot;, horizontalalignment=&#39;center&#39;, fontsize=16); axes.annotate(&#39;Outliers&#39;, xy=(2.93,0.015), xytext=(2.52,0.20), fontsize = 18, arrowprops={&#39;arrowstyle&#39;: &#39;-&gt;&#39;, &#39;color&#39;: &#39;black&#39;, &#39;lw&#39;: 2}, va=&#39;center&#39;); axes.annotate(&#39;Outliers&#39;, xy=(-3.01,0.015), xytext=(-3.41,0.20), fontsize = 18, arrowprops={&#39;arrowstyle&#39;: &#39;-&gt;&#39;, &#39;color&#39;: &#39;black&#39;, &#39;lw&#39;: 2}, va=&#39;center&#39;); . plotly&#47196; boxplot &#44536;&#47532;&#44592; . - 로컬에서 하기 위해서는 아래를 설치 (코랩은 필요없음) . !pip install plotly !pip install ipywidgets !pip install jupyter-dash !pip install dash !pip install pandas . import plotly.express as px import pandas as pd from IPython.display import HTML . df= pd.DataFrame({&#39;score&#39;:y1+y2,&#39;class&#39;:[&#39;A&#39;]*len(y1) + [&#39;B&#39;]*len(y2)}) df . score class . 0 75 | A | . 1 75 | A | . 2 76 | A | . 3 76 | A | . 4 77 | A | . 5 77 | A | . 6 79 | A | . 7 79 | A | . 8 79 | A | . 9 98 | A | . 10 76 | B | . 11 76 | B | . 12 77 | B | . 13 77 | B | . 14 78 | B | . 15 78 | B | . 16 80 | B | . 17 80 | B | . 18 80 | B | . 19 81 | B | . fig = px.box(df,x=&#39;class&#39;,y=&#39;score&#39;) HTML(fig.to_html(include_plotlyjs=&#39;cdn&#39;,include_mathjax=False)) . . . histogram . motivating example . histogram &#51060;&#46976;? . matplotlib&#51004;&#47196; histogram &#44536;&#47532;&#44592; . seaborn&#51004;&#47196; histogram &#44536;&#47532;&#44592; . plotnine&#51004;&#47196; histogram &#44536;&#47532;&#44592; . plotly&#47196; histogram &#44536;&#47532;&#44592; . &#49689;&#51228; . (1) 자기학번으로 np.random.seed(202043052)를 만들고 . (2) y1, y2 // 10만개의 정규분포를 생성해서 저장 . y1: 평균 0, 표준편차=1 | y2: 평균 1, 표준편차=1 | . (3) plotly 를 활용하여 히스토그램을 겹쳐서 그려보는것. .",
            "url": "https://guebin.github.io/DV2022/2022/09/10/(1%EC%A3%BC%EC%B0%A8)-9%EC%9B%945%EC%9D%BC.html",
            "relUrl": "/2022/09/10/(1%EC%A3%BC%EC%B0%A8)-9%EC%9B%945%EC%9D%BC.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "(A2) 데이터시각화 강의소개",
            "content": "&#44596;&#44553;&#44277;&#51648; . - 강의실 변경: (221 $ to$ 227 (?)) . - 노트북 지참필수 . 노트북이 없으면? 자연대 2호관 121호 빅데이터사업단, 조성균 선생님 (063-219-5627) 에게 (1) 신분증(or 학생증) (2) 시간표를 출력하여 방문할 시 한학기 동안 대여 가능 | . - 휴강: 9월5일, 7일, 12일 휴강 -&gt; 강의영상업로드로 보충 . &#51068;&#48152;&#44277;&#51648; . - 강의노트는 어디에? . 2022년 강의노트 | 2021년 강의노트 &lt;- 2021년 중간고사/기말고사 기출문제 + 풀이포함 | . - 학점은 어떻게? . F가 나갈 수 있음!! | . - 출석? . 고민중 | . - 질문하는 방법? (여기로 가서 적당한 방법으로) . 인사생략하고 용건만 간단히! | . &#51452;&#51032;&#49324;&#54637; (&#51060; &#49688;&#50629;&#51012; &#46307;&#51648; &#47568;&#50500;&#50556; &#54624; &#51060;&#50976;?) . - 시험문제의 난이도 . - 수업시간이 너무 길다 . - 재미없음 . - cost-effective 하지 않음.. (특히 파이썬입문을 듣지 않았다면!) .",
            "url": "https://guebin.github.io/DV2022/2022/09/05/(A2)-%EA%B0%95%EC%9D%98%EC%86%8C%EA%B0%9C.html",
            "relUrl": "/2022/09/05/(A2)-%EA%B0%95%EC%9D%98%EC%86%8C%EA%B0%9C.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "(A1) 깃허브와 fastpages를 이용하여 블로그 개설하기",
            "content": "About this doc . - 본 포스트는 2021년 1학기 Python 입문 강의내용중 일부를 업로드 하였음. . - Github, fastpages를 사용하여 블로그를 개설하고 관리하는 방법에 대한 설명임. . .",
            "url": "https://guebin.github.io/DV2022/2021/08/17/(A1)-%EA%B9%83%ED%97%88%EB%B8%8C%EC%99%80-fastpages%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B0%9C%EC%84%A4%ED%95%98%EA%B8%B0.html",
            "relUrl": "/2021/08/17/(A1)-%EA%B9%83%ED%97%88%EB%B8%8C%EC%99%80-fastpages%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B0%9C%EC%84%A4%ED%95%98%EA%B8%B0.html",
            "date": " • Aug 17, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "최규빈 . guebin@jbnu.ac.kr | 자연과학대학교 본관 205호 | 카카오톡 오픈채널1 | . 2022년 2학기 종료 후 폐쇄 예정 &#8617; . |",
          "url": "https://guebin.github.io/DV2022/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://guebin.github.io/DV2022/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}